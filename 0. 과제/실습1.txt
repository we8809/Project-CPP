위키: https://docs.google.com/document/d/1ml_IEgEOvqEHRtRm3qOnsngOwE1fanl_xDHu7qhEYPw/edit

COMP3200 - 실습 1
어느 회사를 가든 첫날에는 여러 프로그램들을 설치하고 계정을 설정하게 될 겁니다. 그리고 첫날이 끝날 때쯤엔 기존 코드베이스를 빌드하고 테스트할 수 있어야 합니다. 포큐에서 실습을 진행하기 위해서도 먼저 환경을 구축해야 합니다. (이번 실습뿐만 아니라 앞으로 본 강좌의 모든 실습과 과제를 할 때 사용할 환경) 그러고 나면 자신의 깃 저장소에 커밋과 푸쉬를 하고 슬랙을 통해 제출하여 자동으로 채점을 받을 수 있습니다.

I. 윈도우 운영체제에 비주얼 스튜디오 2019 설치하기
윈도우 운영체제와 비주얼 스튜디오 2019 사용을 권장합니다. 혹시나 지금껏 다른 개발툴만 써 왔다면 이번이 업계 최고의 IDE를 써 볼 기회입니다.

비주얼 스튜디오 2019를 설치하는 법은 다음의 가이드(링크)를 참고해주세요.

설치가 시작되면 시간이 좀 걸리기 때문에 그 동안 다음 단계를 진행합니다.

II. 깃 클라이언트 설치하기
깃(Git)을 써 본 적이 없으신가요? 소스트리(Sourcetree)를 한번 써보세요. 혹시 이미 깃 사용법을 알고 계신가요? 그럼 다른 원하시는 클라이언트를 사용하셔도 됩니다. 하지만 이 문서에서는 소스트리를 기준으로 설명합니다.

소스트리를 설치하는 방법은 다음의 가이드(링크)를 참고해주세요.

III. 웹 기반 비공개 Git 저장소 만들기
이 수업에서 과제 및 실습을 제출할 때는 Git 저장소(repo)를 사용합니다. 포큐 아카데미에서 지원하는 Git 저장소 서비스는 아래와 같습니다.

깃랩(GitLab): 무료

애져 데브옵스(Azure DevOps): 무료

빗버킷(BitBucket): 무료

깃허브(GitHub): 무료. 단, 비공개 저장소의 경우 협업자(Collaborator) 3명까지만 무료

웹 기반 비공개 Git 저장소를 만드는 방법은 다음의 가이드(링크)를 참고해주세요.

명심하세요! 반드시 비공개(private) 저장소여야 됩니다. **공개(public) 저장소를 사용하실 경우 부정행위로 간주하여 0점 처리합니다. **

IV. 빌드봇을 내 Git 저장소에 초대하기
여러분이 만든 Git 저장소에 빌드봇이 접근하여 빌드할 수 있게 Git 저장소를 세팅합니다.

여러분의 Git 저장소에 다른 유저를 초대하는 방법은 이 가이드(링크)를 참고해주세요.

빌드봇을 초대합니다.

깃랩

'Select members to invite': pocubuildbot

'Choose a role permission': Reporter

빗버킷

'사용자 이름 또는 이메일 주소': pocubuildbot
애져 데브옵스

'User or group': build.bot@pocu.academy
깃허브

'full name': pocubuildbot
V. 나의 POCU에서 내 정보 업데이트하기
아직 슬랙(Slack) 가입을 안 하셨다면 가입을 해주세요. 슬랙 가입 안내 이메일 및 슬랙 초대 이메일에 적힌 대로 진행해주시면 됩니다.

슬랙 가입 및 Git 저장소를 만드셨다면 다음의 순서대로 진행해주세요.

포큐 웹사이트에 로그인 합니다.

나의 POCU로 이동합니다.

아래로 스크롤하여 '내 정보'를 찾습니다.

슬랙 사용자 아이디와 깃 저장소 주소를 입력합니다. 지금은 슬랙 사용자 아이디에 아무값이나 입력합니다. 올바른 슬랙 사용자 아이디를 넣는 방법은 VIII. 코드 제출 및 채점 받기에서 나옵니다.

저장을 누르고, 제대로 저장되었는지 다시 한번 확인합니다.

VI. Git 저장소 세팅 마무리
저장소 클론하기
소스트리를 실행시킵니다.

새 탭에서 상단에 위치한 Clone 버튼을 누릅니다.

소스 경로 / URL(Source Path / URL) 입력란에 자신의 저장소의 HTTPS URL을 붙여넣습니다.

로그인하라는 창이 뜨면 자신의 저장소 계정 Username과 Password로 로그인합니다.

목적지 경로(Destination Path)를 바꾸고 싶으면 바꿔도 됩니다.

클론(Clone) 버튼을 누르면 잠깐의 시간이 흐른 후 완료됩니다.

소스트리를 잠시 내버려 두고, 파일 탐색기를 열어 방금 클론한 폴더로 갑니다. 비어 있는 디렉토리(또는 .git이라는 숨겨진 폴더)를 볼 수 있을 겁니다.

(중요) 운영체제가 맥이신 분의 경우 클론한 폴더를 열고 shift +command + . 키를 입력해줘야합니다.
클론한 폴더에 템플릿 집어넣기
웹 브라우저를 열고 https://github.com/POCU/COMP3200StarterPack으로 이동합니다.

'Clone or download' 버튼 클릭 > 'Download ZIP' 선택

다운받은 파일의 압축을 앞서 클론한 폴더 안에 풉니다. 클론한 폴더 내부 최상위에 다음과 같은 폴더 및 파일들이 보여야합니다.

.git (이 폴더는 숨겨진 폴더라 안보일 수 있습니다.)
Assignments1
Assignments2
Assignments3
Lab1
…
Lab11
props
.gitignore
LICENSE
README.md
다시 소스트리로 돌아갑니다. '스테이지에 올라가지 않은 파일'에 보면 수많은 파일들이 보일 겁니다. '모두 스테이지에 올리기(Stage All)' 버튼을 눌러 주세요.

커밋 메시지를 적절히 입력하세요. '-에 바뀐 내용 즉시 푸시' 옆 체크박스를 체크하고 '커밋(Commit)' 버튼을 누릅니다. (처음에 이름과 이메일을 입력하라는 창이 뜰 수 있습니다. 입력을 완료하고 다시 '커밋(Commit)' 버튼을 눌러서 완료해 주세요)

4.와 5. 이 두 과정이 바로 실습 및 과제를 제출하는 방법입니다. 잘 모르겠다구요? 걱정 마세요! 우린 이 과정을 VIII. 코드 제출 및 채점 받기에서 다시 할 거에요.

VII. 간단한 프로그램 작성하기
이제 오늘 실습에서 테스트할 수 있고 점수를 매길 수 있는 부분입니다. 두 정수를 더하는 함수를 구현해야 합니다.

자동 채점이 올바르게 동작하기 위해서 다음의 과정이 반드시 이루어져야 합니다.

Add.h 파일이 있어야 합니다.

Add.h 파일은 반드시 lab1 namespace 안에 다음의 함수를 가지고 있어야 합니다. (그냥 아래 코드를 복사 후 붙여넣기 해주세요.)

#pragma once

namespace lab1
{
    int Add(int a, int b);
}
그럼 이제 프로그램을 작성해봅시다.

파일 탐색기를 통해 위에서 클론한 저장소 폴더 안의 Lab1 폴더로 갑니다.

Lab1.sln 파일을 더블 클릭합니다. (비주얼 스튜디오 2019이 자동으로 실행됩니다.)

Add.h를 생성합니다. (가이드 링크)

Add.h 파일에 위에서 설명한 코드를 복사 후 붙여넣기 합니다.

Add.cpp를 생성합니다.

Add.cpp 파일에 Add.h에서 선언한 함수(Add())를 구현합니다.

main.cpp 파일에 int main() 함수(프로그램 시작 지점)를 구현합니다. 디버깅을 위해 원하는 테스트 코드를 자유롭게 작성합니다.

프로젝트를 실행합니다. (가이드 링크)

자, 이제 코드를 제출할 준비가 되었습니다.

VIII. 코드 제출 및 채점 받기
이제 코드를 제출하고 채점을 받을 차례입니다.

소스트리를 사용하여 내 코드를 commit 및 push 합니다. (가이드 링크)

본 코스의 슬랙 방에 접속합니다. (슬랙 방의 링크는 나의 POCU 페이지에서 찾으실 수 있습니다.)

아무 대화방이나 가서 다음의 빌드 명령어를 입력합니다. (다음의 명령어는 명령어를 입력한 사람에게만 보입니다.)

/build lab 1
슬랙 유저 ID를 알 수 없다는 오류메시지가 나올 것입니다. 그 오류메시지에 같이 등장하는 슬랙 유저 ID를 나의 POCU 페이지에 가서 업데이트 합니다.

다시 한 번 빌드 명령어(/build lab 1)을 입력하면 이번에는 제대로 빌드를 진행하겠다는 메시지가 나올 것입니다.

1~2분 쯤 기다리면 빌드봇(@buildbot)이 채점결과를 보여줍니다.

점수를 잃은 부분이 있다면 채점결과에 있는 링크를 눌러 왜 점수를 잃었는지 확인한 뒤, 코드를 수정하고 단계 1~7을 다시 반복합니다.

100%를 맞았다면 이것으로 실습 1은 끝입니다! 수고하셨습니다!